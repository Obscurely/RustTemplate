[package]
name = "changeme_bin"
authors = ["CHANGEME_USER <CHANGEME_PMAIL>"]
version = "0.1.0"
edition = "2021"
rust-version = "1.69"                                                              # Minimum rust version
resolver = "2"
description = "CHANGEME_DESC"
documentation = "https://github.com/CHANGEME_USER/CHANGEME_NAME/blob/master/README.md"
repository = "https://github.com/CHANGEME_USER/CHANGEME_NAME"
homepage = "https://github.com/CHANGEME_USER/CHANGEME_NAME"
categories = []                                                                    # CHANGEME_MANUAL
keywords = []                                                                      # CHANGEME_MANUAL
readme = "README.md"
license = "MIT"
build = "build.rs"

#═══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

[package.metadata.deb]
maintainer = "CHANGEME_USER <CHANGEME_PMAIL>"
copyright = "2023, 2023 <CHANGEME_PMAIL>"
license-file = ["LICENSE", "0"]
extended-description = """\
CHANGEME_DESC""""
depends = "$auto"
section = "CHANGEME_MANUAL"

#═══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

[profile.release]
strip = true      # Automatically strip symbols from the binary.
opt-level = 3     # Optimize for speed.
lto = true        # instructs the linker to optimize at the link stage
codegen-units = 1 # Default is 16, the higher the faster compile time, but it may produce slower code.
panic = "unwind"   # Since all of the errors are  handled manually (should be), aborting and removing the panic code is nothing, but an improvement.

#═══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

[target.'cfg(windows)'.build-dependencies]
embed-resource = "2.3.0"

#═══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

[dependencies]
# Great examples include:
#   - rand (togheter with rand_hc for cryptography)
#   - serde and serde_json
#   - reqwest
#   - tokio
#   - futures
#   - regex
#   - clap (fully-featured args parsing), pico-args (minimal args parsing)
#   - chrono (date and time)
#   - tempfile
#   - dirs
#   - indexmap
#   - thiserror and anyerror (for error handling)
#   - tracing (logging)
#   - walkdir (recursively read a directory)
#   - rayon (using .par_iter() it makes iters run in parallel)
#   - slint (ui framework)
#   - sled (high performance, written in rust, db)
#   - itertools (for when extra iterator methods are needed)
#   - crossterm
#   - dashmap (hashmap to use in concurrent environments)
#   - smallvec (vector that allocater on the stack)
#   - crossbeam (tools for concurrent programming)
